package Map;

/*
Dados os modelos dos acarros e seus respectivos consumos na estrada faça:
gol - consumo = 14,4 km/L
uno - consumo = 15,6 km/L
mobi - consumo = 16,1 km/L
hb20 - consumo = 14,5 km/L
kwid - consumo = 15,6 km/L
 */

import java.util.*;

public class ExemploMap_1 {

    public static void main(String[] args) {

        System.out.println("Crie um dicionário que relacione os modelos e seus respectivos consumos: ");
        Map<String, Double> carrosPopulares = new HashMap<>(){{
            put("Gol", 14.4);
            put("Uno", 15.6);
            put("Mobi", 16.1);
            put("HB20", 14.5);
            put("Kwid", 15.6);
        }};

        System.out.println(carrosPopulares.toString());

        System.out.println("\nSubstitua o consumo do Gol por 15,2 km/L: ");
        carrosPopulares.put("Gol", 15.2);
        System.out.println(carrosPopulares.toString());

        System.out.println("\nConfira se o modelo Tucson está no dicionário: ");
        System.out.println("Possui o modelo Tucson? " + carrosPopulares.containsKey("Tucson"));

        System.out.println("\nExiba o consumo do Uno: ");
        System.out.println("O consumo do Uno é: " + carrosPopulares.get("Uno") + " km/L");

        //System.out.println("Exiba o terceiro modelo adicionado: "); Não existe um método para fazer isso

        System.out.println("\nExiba os modelos: ");
        Set<String> modelos = carrosPopulares.keySet();
        System.out.println(modelos.toString());

        System.out.println("\nExiba o consumo dos carros: ");
        Collection<Double> consumo = carrosPopulares.values();
        System.out.println(consumo.toString());

        System.out.println("\nExiba o modelo mais econômico e seu consumo: ");
        Double menorConsumo = Collections.max(carrosPopulares.values());
        Set<Map.Entry<String, Double>> entries = carrosPopulares.entrySet();
        String modeloMaisEficiente = "";

        for (Map.Entry<String, Double> entry : entries) {
            if (entry.getValue().equals(menorConsumo)) {
                modeloMaisEficiente = entry.getKey().toString();

                System.out.println("O modelo MAIS eficiênte é o "
                        + modeloMaisEficiente + " com consumo de " + menorConsumo + " km/L.");

            }

        }

        System.out.println("\nExiba o modelo menos econômico e seu consumo: ");
        Double maiorConsumo = Collections.min(carrosPopulares.values());
        Set<Map.Entry<String, Double>> entries1 = carrosPopulares.entrySet();
        String modeloMenosEficiente = "";

        for (Map.Entry<String, Double> entry : entries1) {
            if (entry.getValue().equals((maiorConsumo))) {
                modeloMenosEficiente = entry.getKey().toString();

                System.out.println("O modelo MENOS eficiente é o "
                        + modeloMenosEficiente + " com consumo de " + maiorConsumo + " km/L.");
            }
        }

        System.out.println("Exiba a soma dos consumos: ");
        Double soma = 0d;
        Iterator<Double> iterator = carrosPopulares.values().iterator();

        while (iterator.hasNext()) {
            soma += iterator.next();

        }
        System.out.println("\nA soma de todos os consumos dos carros é: " + soma + " km/L.");

        System.out.println("\nExiba a média dos consumos deste dicionário de carros: ");
        Double media = soma / carrosPopulares.size();
        System.out.println("A média de consumo dos carros em questão é: " + media + " km/L.");

        System.out.println("\nRemova os modelos com consumo igual a 15,6 km/L: ");
        System.out.println(carrosPopulares);
        Iterator<Double> iterator1 = carrosPopulares.values().iterator();

        while (iterator1.hasNext()) {
            if (iterator1.next() == 15.6) { // Também dá certo com iterator1.next().equals(15.6)
                iterator1.remove();

            }
        }
        System.out.println(carrosPopulares);

        System.out.println("\nExiba todos os carros na ordem em que foram informados: ");
        Map<String, Double> carrosPopulares1 = new LinkedHashMap<>(){{
            put("Gol", 14.4);
            put("Uno", 15.6);
            put("Mobi", 16.1);
            put("HB20", 14.5);
            put("Kwid", 16.6);

        }};

        System.out.println(carrosPopulares1.toString());

        System.out.println("\nExiba o dicionário ordenado pelo modelo: ");
        Map<String, Double> carrosPopulares2 = new TreeMap<>(carrosPopulares1);

        System.out.println(carrosPopulares2.toString());

        System.out.println("\nApague o conjunto de carros: ");
        carrosPopulares.clear();
        System.out.println(carrosPopulares.toString());

        System.out.println("\nA lista de carros está vazia? " + carrosPopulares.isEmpty());

    }

}
